version: 2.1

orbs:
  orb-tools: circleci/orb-tools@9.2.1
  kubernetes: circleci/kubernetes@0.11.2

# Pipeline parameters
parameters:
  # These pipeline parameters are required by the "trigger-integration-tests-workflow"
  # job, by default.
  run-integration-tests:
    type: boolean
    default: false
  dev-orb-version:
    type: string
    default: "dev:alpha"

executors:
  ci-base:
    docker:
      - image: cimg/base:stable

  machine:
    machine: true

  minikube:
    machine:
      image: ubuntu-1604:201903-01
    environment:
      CHANGE_MINIKUBE_NONE_USER=true

  macos:
    macos:
      xcode: "10.1.0"

commands:
  start-minikube:
    steps:
      - run:
          name: Start minikube
          command: |
            sudo apt-get update
            sudo apt-get install -y conntrack
            curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 \
              && chmod +x minikube
            sudo cp minikube /usr/local/bin && rm minikube
            sudo -E minikube start --kubernetes-version=v1.19.6 --vm-driver=none --cpus 2 --memory 2048
  install-helm:
    steps:
      - run:
          name: Install Helm 
          command: |
            curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3\
              && chmod 700 get_helm.sh
            ./get_helm.sh 
  install-istio:
    steps:
      - run:
          name: Install ISTIO 
          command: |
            curl -L https://istio.io/downloadIstio | ISTIO_VERSION=1.9.1 sh - \
             && cd istio-1.9.1 && ls -l
            cp ./bin/istioctl /usr/local/bin/istioctl && chmod +x /usr/local/bin/istioctl
            export PATH=$PWD/bin:$PATH
            istioctl install --set profile=demo -y                      
  app-test:
    steps:
      - run:
          name: App test 
          command: |
            echo "Create namespace with ISTIO sidecar"
            kubectl apply -f example/SmallStep-mutual/namespace.yaml 
            echo "Create simple application deployment"
            kubectl apply -f example/SmallStep-mutual/httpbin.yaml 
            echo "Create ISTIO gateway and virtual service"
            kubectl apply -f example/SmallStep-mutual/httpbin-gateway.yaml
            echo "Create certificate"
            kubectl apply -f example/SmallStep-mutual/Certificate.yaml
            echo "Check, that certificate successfully issued"
            kubectl get certificates.cert-manager.io -n istio-system | grep  -w Running  && exit_status=$? || exit_status=$?"
            if [ "$exit_status" = 0 ]
            then
            echo "executed Successfully"
            else
            echo "not executed Successfully"
            exit 1
            fi
jobs:

  integration-test-kubectl:
    executor: machine
    steps:
      - kubernetes/install-kubectl
      - run:
          name: kubectl version
          command: |
            kubectl version
  integration-test-helm:
    executor: machine
    steps:
      - install-helm
      - run:
          name: Check helm version
          command: |
            helm version
  deploy:
    executor: minikube
    steps:
      - checkout
      - kubernetes/install-kubectl
      - install-helm
      - start-minikube
      - install-istio
      - run:
          name: Deploy script
          command: |
            ls -l; chmod +x setup.sh
            echo "Installing \"crt-manager\" ...."
            kubectl apply -f https://github.com/jetstack/cert-manager/releases/download/v1.2.0/cert-manager.yaml
            echo "Wait 20s and Checking if installed"
            for i in {0..20}; do echo -ne "$i"'\r'; sleep 1; done; echo 
            kubectl get pods --namespace cert-manager
            kubectl get nodes
            helm repo add smallstep  https://smallstep.github.io/helm-charts &&\
            helm repo update && \
            helm install step-certificates smallstep/step-certificates --namespace $NAME_SPACE && \
            sleep 10 && \
            kubectl apply -f https://raw.githubusercontent.com/smallstep/step-issuer/master/config/crd/bases/certmanager.step.sm_stepissuers.yaml && \
            kubectl apply -f https://raw.githubusercontent.com/smallstep/step-issuer/master/config/samples/deployment.yaml
            echo "Get the \"kid\":"
            echo ""
            export KID=$(kubectl -n $NAME_SPACE get -o jsonpath="{.data['ca\.json']}" configmaps/step-certificates-config | jq .authority.provisioners | grep  "kid" |  awk  '{ print $2 }' | cut -f2 -d"\"")
            echo "kid = $KID" | cat -v
            echo ""
            echo "Get the \"CABANDLE\":"
            export CABANDLE=$(kubectl -n $NAME_SPACE get -o jsonpath="{.data['root_ca\.crt']}" configmaps/step-certificates-certs | base64 |  tr -d \\n)
            echo "CABANDLE = $CABANDLE" | cat -v
            echo "Get the \"CA url\":"
            export CAURL=$(kubectl -n $NAME_SPACE get -o jsonpath="{.data['defaults\.json']}" configmaps/step-certificates-config | grep -oP '(?<="ca-url": ")[^"]*')
            echo "CAURL = $CAURL" | cat -v

              cat src/Step-Issuer-dev.yaml | \
              sed "s/NAME_SPACE/istio-system/" | \
              sed "s/CABANDLE/$CABANDLE/"| \
              sed "s/KID/$KID/" | \
              sed "s#CAURL#$CAURL#" | \
              kubectl apply -f - ;
#            ./setup.sh --name-space=istio-system --force
      - app-test

workflows:

  integration-tests_prod-release:
    jobs:
      - integration-test-helm
  #    - integration-test-kubectl
      - deploy
